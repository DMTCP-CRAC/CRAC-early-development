# Makefile.in generated by automake 1.16.1 from Makefile.am.
# plugin/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# We should disable AM_MAINTAINER_MODE since otherwise a re-build by the
#  end-user may require local tools, which may be missing or whose version is
#  incompatible with these tools (e.g. autoheader).  Instead, we run NMI and
#  openSUSE build services to test compatibility with end-user machines.
#  The developers should run autoconf, automake, etc., as needed, but
#  not propagate to the svn-generated tools that may be incompatible
#  with the user's local tools.  - Gene
# See http://www.gnu.org/s/hello/manual/automake/CVS.html#CVS
# AM_MAINTAINER_MDE([disable])



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/dmtcp
pkgincludedir = $(includedir)/dmtcp
pkglibdir = $(libdir)/dmtcp
pkglibexecdir = $(libexecdir)/dmtcp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(d_bindir)/dmtcp_discover_rm$(EXEEXT) \
	$(d_bindir)/dmtcp_srun_helper$(EXEEXT)
libdmtcp_PROGRAMS = $(d_libdir)/libdmtcp_batch-queue.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_modify-env.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_pathvirt.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_unique-ckpt.so$(EXEEXT)
subdir = plugin
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_bin_SCRIPTS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdmtcpdir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(libdmtcp_PROGRAMS)
am___d_bindir__dmtcp_discover_rm_OBJECTS =  \
	discover_dmtcpinput.$(OBJEXT) discover_resources.$(OBJEXT) \
	discover_slurm.$(OBJEXT) discover_torque.$(OBJEXT) \
	dmtcp_discover_rm.$(OBJEXT)
__d_bindir__dmtcp_discover_rm_OBJECTS =  \
	$(am___d_bindir__dmtcp_discover_rm_OBJECTS)
__d_bindir__dmtcp_discover_rm_LDADD = $(LDADD)
__d_bindir__dmtcp_discover_rm_DEPENDENCIES =
am__dirstamp = $(am__leading_dot)dirstamp
am___d_bindir__dmtcp_srun_helper_OBJECTS = slurm_helper.$(OBJEXT) \
	dmtcp_srun_helper.$(OBJEXT)
__d_bindir__dmtcp_srun_helper_OBJECTS =  \
	$(am___d_bindir__dmtcp_srun_helper_OBJECTS)
__d_bindir__dmtcp_srun_helper_LDADD = $(LDADD)
__d_bindir__dmtcp_srun_helper_DEPENDENCIES =
am___d_libdir__libdmtcp_batch_queue_so_OBJECTS = rm_main.$(OBJEXT) \
	rm_torque.$(OBJEXT) rm_slurm.$(OBJEXT) rm_utils.$(OBJEXT) \
	rm_pmi.$(OBJEXT) slurm_helper.$(OBJEXT)
__d_libdir__libdmtcp_batch_queue_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_batch_queue_so_OBJECTS)
am__DEPENDENCIES_1 =
__d_libdir__libdmtcp_batch_queue_so_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
__d_libdir__libdmtcp_batch_queue_so_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(__d_libdir__libdmtcp_batch_queue_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am___d_libdir__libdmtcp_modify_env_so_OBJECTS = modify-env.$(OBJEXT) \
	warning.$(OBJEXT)
__d_libdir__libdmtcp_modify_env_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_modify_env_so_OBJECTS)
__d_libdir__libdmtcp_modify_env_so_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
__d_libdir__libdmtcp_modify_env_so_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(__d_libdir__libdmtcp_modify_env_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am___d_libdir__libdmtcp_pathvirt_so_OBJECTS = pathvirt.$(OBJEXT)
__d_libdir__libdmtcp_pathvirt_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_pathvirt_so_OBJECTS)
__d_libdir__libdmtcp_pathvirt_so_DEPENDENCIES = $(am__DEPENDENCIES_1)
__d_libdir__libdmtcp_pathvirt_so_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(__d_libdir__libdmtcp_pathvirt_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am___d_libdir__libdmtcp_unique_ckpt_so_OBJECTS =  \
	unique-ckpt.$(OBJEXT)
__d_libdir__libdmtcp_unique_ckpt_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_unique_ckpt_so_OBJECTS)
__d_libdir__libdmtcp_unique_ckpt_so_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
__d_libdir__libdmtcp_unique_ckpt_so_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(__d_libdir__libdmtcp_unique_ckpt_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS) $(dist_bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/discover_dmtcpinput.Po \
	./$(DEPDIR)/discover_resources.Po \
	./$(DEPDIR)/discover_slurm.Po ./$(DEPDIR)/discover_torque.Po \
	./$(DEPDIR)/dmtcp_discover_rm.Po \
	./$(DEPDIR)/dmtcp_srun_helper.Po ./$(DEPDIR)/modify-env.Po \
	./$(DEPDIR)/pathvirt.Po ./$(DEPDIR)/rm_main.Po \
	./$(DEPDIR)/rm_pmi.Po ./$(DEPDIR)/rm_slurm.Po \
	./$(DEPDIR)/rm_torque.Po ./$(DEPDIR)/rm_utils.Po \
	./$(DEPDIR)/slurm_helper.Po ./$(DEPDIR)/unique-ckpt.Po \
	./$(DEPDIR)/warning.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(__d_bindir__dmtcp_discover_rm_SOURCES) \
	$(__d_bindir__dmtcp_srun_helper_SOURCES) \
	$(__d_libdir__libdmtcp_batch_queue_so_SOURCES) \
	$(__d_libdir__libdmtcp_modify_env_so_SOURCES) \
	$(__d_libdir__libdmtcp_pathvirt_so_SOURCES) \
	$(__d_libdir__libdmtcp_unique_ckpt_so_SOURCES)
DIST_SOURCES = $(__d_bindir__dmtcp_discover_rm_SOURCES) \
	$(__d_bindir__dmtcp_srun_helper_SOURCES) \
	$(__d_libdir__libdmtcp_batch_queue_so_SOURCES) \
	$(__d_libdir__libdmtcp_modify_env_so_SOURCES) \
	$(__d_libdir__libdmtcp_pathvirt_so_SOURCES) \
	$(__d_libdir__libdmtcp_unique_ckpt_so_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
AARCH64_HOST = no
ACLOCAL = ${SHELL} /home/twinkle/proj/lancium/split-process-lancium/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ARFLAGS = cr
ARM_HOST = no
AUTOCONF = ${SHELL} /home/twinkle/proj/lancium/split-process-lancium/missing autoconf
AUTOHEADER = ${SHELL} /home/twinkle/proj/lancium/split-process-lancium/missing autoheader
AUTOMAKE = ${SHELL} /home/twinkle/proj/lancium/split-process-lancium/missing automake-1.13
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -g3 -O0 -DDEBUG
CILKC = no
CPP = gcc -E
CPPFLAGS =  -Wall -g3 -O0 -DDEBUG
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -g3 -O0 -DDEBUG
CYGPATH_W = echo
DEBUG = yes
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = 
EXEEXT = 
FAST_RST_VIA_MMAP = no
GCL = no
GREP = 
HAS_CILK = no
HAS_CMA = no
HAS_DASH = yes
HAS_EMACS = no
HAS_EMACS_NOX = no
HAS_EPOLL_CREATE1 = yes
HAS_GCL = no
HAS_GDB = yes
HAS_GZIP = yes
HAS_JAVA = yes
HAS_JAVAC = yes
HAS_MATLAB = no
HAS_MPICH = yes
HAS_MUTEX_WRAPPERS = no
HAS_OPENMPI = no
HAS_PS = yes
HAS_PYTHON = yes
HAS_READLINE = no
HAS_SCREEN = no
HAS_SCRIPT = yes
HAS_SSH_LOCALHOST = no
HAS_STRACE = yes
HAS_TCSH = no
HAS_VIM = yes
HAS_ZSH = yes
HBICT_DELTACOMP = no
INFINIBAND_SUPPORT = no
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LOGGING = no
LTLIBOBJS = 
M32 = 0
MAINT = #
MAKEINFO = ${SHELL} /home/twinkle/proj/lancium/split-process-lancium/missing makeinfo
MATLAB = no
MKDIR_P = /bin/mkdir -p
MPICH_MPD = @MPICH_MPD@
MPICH_MPDALLEXIT = @MPICH_MPDALLEXIT@
MPICH_MPDBOOT = @MPICH_MPDBOOT@
MPICH_MPDCLEANUP = @MPICH_MPDCLEANUP@
MPICH_MPICC = yes
MPICH_MPIEXEC = yes
OBJEXT = o
OPENMPI_MPICC = /usr/bin/mpicc
OPENMPI_MPIRUN = /usr/bin/mpirun
OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
PACKAGE = dmtcp
PACKAGE_BUGREPORT = dmtcp-forum@lists.sourceforge.net
PACKAGE_NAME = DMTCP
PACKAGE_STRING = DMTCP 3.0.0
PACKAGE_TARNAME = dmtcp
PACKAGE_URL = http://dmtcp.sourceforge.net
PACKAGE_VERSION = 3.0.0
PATH_SEPARATOR = :
RANLIB = ranlib
SCREEN = no
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
TEST_POSIX_MQ = yes
USE_TEST_SUITE = yes
VERSION = 3.0.0
VIM = /usr/bin/vim
abs_builddir = /home/twinkle/proj/lancium/split-process-lancium/plugin
abs_srcdir = /home/twinkle/proj/lancium/split-process-lancium/plugin
abs_top_builddir = /home/twinkle/proj/lancium/split-process-lancium
abs_top_srcdir = /home/twinkle/proj/lancium/split-process-lancium
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/twinkle/proj/lancium/split-process-lancium/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# not a GNU package. You can remove this line, if
# have all needed files, that a GNU package needs
AUTOMAKE_OPTIONS = foreign
PICFLAGS = -fPIC
AM_CFLAGS = $(PICFLAGS)
AM_CXXFLAGS = $(PICFLAGS)
AM_LDFLAGS = $(PICFLAGS)
d_libdir = $(top_builddir)/lib/$(PACKAGE)
#d_libdir = $(top_builddir)/lib/$(PACKAGE)/32/lib/$(PACKAGE)
d_bindir = $(top_builddir)/bin
#d_bindir = $(top_builddir)/lib/$(PACKAGE)/32/bin

#HEADERS
#set the include path found by configure
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/jalib
dmtcp_ldflags = -shared -Xlinker -znow -Wl,--unresolved-symbols=ignore-all
LDADD = -ldl -lpthread
libdmtcpdir = $(pkglibdir)
dist_bin_SCRIPTS = batch-queue/dmtcp_rm_loclaunch
bin_SCRIPTS = 
CLEANFILES = 
__d_libdir__libdmtcp_batch_queue_so_SOURCES = \
	batch-queue/rm_main.cpp                                        \
	batch-queue/rm_main.h                                          \
	batch-queue/rm_torque.cpp                                      \
	batch-queue/rm_torque.h                                        \
	batch-queue/rm_slurm.cpp                                       \
	batch-queue/rm_slurm.h                                         \
	batch-queue/rm_utils.cpp                                       \
	batch-queue/rm_utils.h                                         \
	batch-queue/rm_pmi.cpp                                         \
	batch-queue/rm_pmi.h                                           \
	batch-queue/slurm_helper.cpp

__d_libdir__libdmtcp_batch_queue_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_batch_queue_so_LDADD = $(LDADD)
__d_bindir__dmtcp_discover_rm_SOURCES = \
	batch-queue/discover_dmtcpinput.cpp                            \
	batch-queue/discover_resources.cpp                             \
	batch-queue/discover_slurm.cpp                                 \
	batch-queue/discover_torque.cpp                                \
	batch-queue/dmtcp_discover_rm.cpp

__d_bindir__dmtcp_srun_helper_SOURCES = \
	batch-queue/rm_main.h                                          \
	batch-queue/rm_slurm.h                                         \
	batch-queue/slurm_helper.cpp                                   \
	batch-queue/slurm_helper.h                                     \
	batch-queue/dmtcp_srun_helper.cpp

__d_libdir__libdmtcp_modify_env_so_SOURCES = \
	modify-env/modify-env.c modify-env/warning.cpp

__d_libdir__libdmtcp_modify_env_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_modify_env_so_LDADD = $(LDADD)
__d_libdir__libdmtcp_pathvirt_so_SOURCES = \
	pathvirt/pathvirt.cpp

__d_libdir__libdmtcp_pathvirt_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_pathvirt_so_LDADD = $(LDADD)
__d_libdir__libdmtcp_unique_ckpt_so_SOURCES = \
	unique-ckpt/unique-ckpt.cpp

__d_libdir__libdmtcp_unique_ckpt_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_unique_ckpt_so_LDADD = $(LDADD)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign plugin/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign plugin/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
install-libdmtcpPROGRAMS: $(libdmtcp_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(libdmtcp_PROGRAMS)'; test -n "$(libdmtcpdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdmtcpdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdmtcpdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libdmtcpdir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libdmtcpdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libdmtcpPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libdmtcp_PROGRAMS)'; test -n "$(libdmtcpdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdmtcpdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libdmtcpdir)" && rm -f $$files

clean-libdmtcpPROGRAMS:
	-test -z "$(libdmtcp_PROGRAMS)" || rm -f $(libdmtcp_PROGRAMS)
$(d_bindir)/$(am__dirstamp):
	@$(MKDIR_P) $(d_bindir)
	@: > $(d_bindir)/$(am__dirstamp)

$(d_bindir)/dmtcp_discover_rm$(EXEEXT): $(__d_bindir__dmtcp_discover_rm_OBJECTS) $(__d_bindir__dmtcp_discover_rm_DEPENDENCIES) $(EXTRA___d_bindir__dmtcp_discover_rm_DEPENDENCIES) $(d_bindir)/$(am__dirstamp)
	@rm -f $(d_bindir)/dmtcp_discover_rm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(__d_bindir__dmtcp_discover_rm_OBJECTS) $(__d_bindir__dmtcp_discover_rm_LDADD) $(LIBS)

$(d_bindir)/dmtcp_srun_helper$(EXEEXT): $(__d_bindir__dmtcp_srun_helper_OBJECTS) $(__d_bindir__dmtcp_srun_helper_DEPENDENCIES) $(EXTRA___d_bindir__dmtcp_srun_helper_DEPENDENCIES) $(d_bindir)/$(am__dirstamp)
	@rm -f $(d_bindir)/dmtcp_srun_helper$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(__d_bindir__dmtcp_srun_helper_OBJECTS) $(__d_bindir__dmtcp_srun_helper_LDADD) $(LIBS)
$(d_libdir)/$(am__dirstamp):
	@$(MKDIR_P) $(d_libdir)
	@: > $(d_libdir)/$(am__dirstamp)

$(d_libdir)/libdmtcp_batch-queue.so$(EXEEXT): $(__d_libdir__libdmtcp_batch_queue_so_OBJECTS) $(__d_libdir__libdmtcp_batch_queue_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_batch_queue_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_batch-queue.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_batch_queue_so_LINK) $(__d_libdir__libdmtcp_batch_queue_so_OBJECTS) $(__d_libdir__libdmtcp_batch_queue_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_modify-env.so$(EXEEXT): $(__d_libdir__libdmtcp_modify_env_so_OBJECTS) $(__d_libdir__libdmtcp_modify_env_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_modify_env_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_modify-env.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_modify_env_so_LINK) $(__d_libdir__libdmtcp_modify_env_so_OBJECTS) $(__d_libdir__libdmtcp_modify_env_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_pathvirt.so$(EXEEXT): $(__d_libdir__libdmtcp_pathvirt_so_OBJECTS) $(__d_libdir__libdmtcp_pathvirt_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_pathvirt_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_pathvirt.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_pathvirt_so_LINK) $(__d_libdir__libdmtcp_pathvirt_so_OBJECTS) $(__d_libdir__libdmtcp_pathvirt_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_unique-ckpt.so$(EXEEXT): $(__d_libdir__libdmtcp_unique_ckpt_so_OBJECTS) $(__d_libdir__libdmtcp_unique_ckpt_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_unique_ckpt_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_unique-ckpt.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_unique_ckpt_so_LINK) $(__d_libdir__libdmtcp_unique_ckpt_so_OBJECTS) $(__d_libdir__libdmtcp_unique_ckpt_so_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/discover_dmtcpinput.Po # am--include-marker
include ./$(DEPDIR)/discover_resources.Po # am--include-marker
include ./$(DEPDIR)/discover_slurm.Po # am--include-marker
include ./$(DEPDIR)/discover_torque.Po # am--include-marker
include ./$(DEPDIR)/dmtcp_discover_rm.Po # am--include-marker
include ./$(DEPDIR)/dmtcp_srun_helper.Po # am--include-marker
include ./$(DEPDIR)/modify-env.Po # am--include-marker
include ./$(DEPDIR)/pathvirt.Po # am--include-marker
include ./$(DEPDIR)/rm_main.Po # am--include-marker
include ./$(DEPDIR)/rm_pmi.Po # am--include-marker
include ./$(DEPDIR)/rm_slurm.Po # am--include-marker
include ./$(DEPDIR)/rm_torque.Po # am--include-marker
include ./$(DEPDIR)/rm_utils.Po # am--include-marker
include ./$(DEPDIR)/slurm_helper.Po # am--include-marker
include ./$(DEPDIR)/unique-ckpt.Po # am--include-marker
include ./$(DEPDIR)/warning.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

modify-env.o: modify-env/modify-env.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT modify-env.o -MD -MP -MF $(DEPDIR)/modify-env.Tpo -c -o modify-env.o `test -f 'modify-env/modify-env.c' || echo '$(srcdir)/'`modify-env/modify-env.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/modify-env.Tpo $(DEPDIR)/modify-env.Po
#	$(AM_V_CC)source='modify-env/modify-env.c' object='modify-env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o modify-env.o `test -f 'modify-env/modify-env.c' || echo '$(srcdir)/'`modify-env/modify-env.c

modify-env.obj: modify-env/modify-env.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT modify-env.obj -MD -MP -MF $(DEPDIR)/modify-env.Tpo -c -o modify-env.obj `if test -f 'modify-env/modify-env.c'; then $(CYGPATH_W) 'modify-env/modify-env.c'; else $(CYGPATH_W) '$(srcdir)/modify-env/modify-env.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/modify-env.Tpo $(DEPDIR)/modify-env.Po
#	$(AM_V_CC)source='modify-env/modify-env.c' object='modify-env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o modify-env.obj `if test -f 'modify-env/modify-env.c'; then $(CYGPATH_W) 'modify-env/modify-env.c'; else $(CYGPATH_W) '$(srcdir)/modify-env/modify-env.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

discover_dmtcpinput.o: batch-queue/discover_dmtcpinput.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_dmtcpinput.o -MD -MP -MF $(DEPDIR)/discover_dmtcpinput.Tpo -c -o discover_dmtcpinput.o `test -f 'batch-queue/discover_dmtcpinput.cpp' || echo '$(srcdir)/'`batch-queue/discover_dmtcpinput.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_dmtcpinput.Tpo $(DEPDIR)/discover_dmtcpinput.Po
#	$(AM_V_CXX)source='batch-queue/discover_dmtcpinput.cpp' object='discover_dmtcpinput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_dmtcpinput.o `test -f 'batch-queue/discover_dmtcpinput.cpp' || echo '$(srcdir)/'`batch-queue/discover_dmtcpinput.cpp

discover_dmtcpinput.obj: batch-queue/discover_dmtcpinput.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_dmtcpinput.obj -MD -MP -MF $(DEPDIR)/discover_dmtcpinput.Tpo -c -o discover_dmtcpinput.obj `if test -f 'batch-queue/discover_dmtcpinput.cpp'; then $(CYGPATH_W) 'batch-queue/discover_dmtcpinput.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_dmtcpinput.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_dmtcpinput.Tpo $(DEPDIR)/discover_dmtcpinput.Po
#	$(AM_V_CXX)source='batch-queue/discover_dmtcpinput.cpp' object='discover_dmtcpinput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_dmtcpinput.obj `if test -f 'batch-queue/discover_dmtcpinput.cpp'; then $(CYGPATH_W) 'batch-queue/discover_dmtcpinput.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_dmtcpinput.cpp'; fi`

discover_resources.o: batch-queue/discover_resources.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_resources.o -MD -MP -MF $(DEPDIR)/discover_resources.Tpo -c -o discover_resources.o `test -f 'batch-queue/discover_resources.cpp' || echo '$(srcdir)/'`batch-queue/discover_resources.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_resources.Tpo $(DEPDIR)/discover_resources.Po
#	$(AM_V_CXX)source='batch-queue/discover_resources.cpp' object='discover_resources.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_resources.o `test -f 'batch-queue/discover_resources.cpp' || echo '$(srcdir)/'`batch-queue/discover_resources.cpp

discover_resources.obj: batch-queue/discover_resources.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_resources.obj -MD -MP -MF $(DEPDIR)/discover_resources.Tpo -c -o discover_resources.obj `if test -f 'batch-queue/discover_resources.cpp'; then $(CYGPATH_W) 'batch-queue/discover_resources.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_resources.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_resources.Tpo $(DEPDIR)/discover_resources.Po
#	$(AM_V_CXX)source='batch-queue/discover_resources.cpp' object='discover_resources.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_resources.obj `if test -f 'batch-queue/discover_resources.cpp'; then $(CYGPATH_W) 'batch-queue/discover_resources.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_resources.cpp'; fi`

discover_slurm.o: batch-queue/discover_slurm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_slurm.o -MD -MP -MF $(DEPDIR)/discover_slurm.Tpo -c -o discover_slurm.o `test -f 'batch-queue/discover_slurm.cpp' || echo '$(srcdir)/'`batch-queue/discover_slurm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_slurm.Tpo $(DEPDIR)/discover_slurm.Po
#	$(AM_V_CXX)source='batch-queue/discover_slurm.cpp' object='discover_slurm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_slurm.o `test -f 'batch-queue/discover_slurm.cpp' || echo '$(srcdir)/'`batch-queue/discover_slurm.cpp

discover_slurm.obj: batch-queue/discover_slurm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_slurm.obj -MD -MP -MF $(DEPDIR)/discover_slurm.Tpo -c -o discover_slurm.obj `if test -f 'batch-queue/discover_slurm.cpp'; then $(CYGPATH_W) 'batch-queue/discover_slurm.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_slurm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_slurm.Tpo $(DEPDIR)/discover_slurm.Po
#	$(AM_V_CXX)source='batch-queue/discover_slurm.cpp' object='discover_slurm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_slurm.obj `if test -f 'batch-queue/discover_slurm.cpp'; then $(CYGPATH_W) 'batch-queue/discover_slurm.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_slurm.cpp'; fi`

discover_torque.o: batch-queue/discover_torque.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_torque.o -MD -MP -MF $(DEPDIR)/discover_torque.Tpo -c -o discover_torque.o `test -f 'batch-queue/discover_torque.cpp' || echo '$(srcdir)/'`batch-queue/discover_torque.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_torque.Tpo $(DEPDIR)/discover_torque.Po
#	$(AM_V_CXX)source='batch-queue/discover_torque.cpp' object='discover_torque.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_torque.o `test -f 'batch-queue/discover_torque.cpp' || echo '$(srcdir)/'`batch-queue/discover_torque.cpp

discover_torque.obj: batch-queue/discover_torque.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT discover_torque.obj -MD -MP -MF $(DEPDIR)/discover_torque.Tpo -c -o discover_torque.obj `if test -f 'batch-queue/discover_torque.cpp'; then $(CYGPATH_W) 'batch-queue/discover_torque.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_torque.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/discover_torque.Tpo $(DEPDIR)/discover_torque.Po
#	$(AM_V_CXX)source='batch-queue/discover_torque.cpp' object='discover_torque.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o discover_torque.obj `if test -f 'batch-queue/discover_torque.cpp'; then $(CYGPATH_W) 'batch-queue/discover_torque.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/discover_torque.cpp'; fi`

dmtcp_discover_rm.o: batch-queue/dmtcp_discover_rm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dmtcp_discover_rm.o -MD -MP -MF $(DEPDIR)/dmtcp_discover_rm.Tpo -c -o dmtcp_discover_rm.o `test -f 'batch-queue/dmtcp_discover_rm.cpp' || echo '$(srcdir)/'`batch-queue/dmtcp_discover_rm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dmtcp_discover_rm.Tpo $(DEPDIR)/dmtcp_discover_rm.Po
#	$(AM_V_CXX)source='batch-queue/dmtcp_discover_rm.cpp' object='dmtcp_discover_rm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dmtcp_discover_rm.o `test -f 'batch-queue/dmtcp_discover_rm.cpp' || echo '$(srcdir)/'`batch-queue/dmtcp_discover_rm.cpp

dmtcp_discover_rm.obj: batch-queue/dmtcp_discover_rm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dmtcp_discover_rm.obj -MD -MP -MF $(DEPDIR)/dmtcp_discover_rm.Tpo -c -o dmtcp_discover_rm.obj `if test -f 'batch-queue/dmtcp_discover_rm.cpp'; then $(CYGPATH_W) 'batch-queue/dmtcp_discover_rm.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/dmtcp_discover_rm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dmtcp_discover_rm.Tpo $(DEPDIR)/dmtcp_discover_rm.Po
#	$(AM_V_CXX)source='batch-queue/dmtcp_discover_rm.cpp' object='dmtcp_discover_rm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dmtcp_discover_rm.obj `if test -f 'batch-queue/dmtcp_discover_rm.cpp'; then $(CYGPATH_W) 'batch-queue/dmtcp_discover_rm.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/dmtcp_discover_rm.cpp'; fi`

slurm_helper.o: batch-queue/slurm_helper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT slurm_helper.o -MD -MP -MF $(DEPDIR)/slurm_helper.Tpo -c -o slurm_helper.o `test -f 'batch-queue/slurm_helper.cpp' || echo '$(srcdir)/'`batch-queue/slurm_helper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/slurm_helper.Tpo $(DEPDIR)/slurm_helper.Po
#	$(AM_V_CXX)source='batch-queue/slurm_helper.cpp' object='slurm_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o slurm_helper.o `test -f 'batch-queue/slurm_helper.cpp' || echo '$(srcdir)/'`batch-queue/slurm_helper.cpp

slurm_helper.obj: batch-queue/slurm_helper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT slurm_helper.obj -MD -MP -MF $(DEPDIR)/slurm_helper.Tpo -c -o slurm_helper.obj `if test -f 'batch-queue/slurm_helper.cpp'; then $(CYGPATH_W) 'batch-queue/slurm_helper.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/slurm_helper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/slurm_helper.Tpo $(DEPDIR)/slurm_helper.Po
#	$(AM_V_CXX)source='batch-queue/slurm_helper.cpp' object='slurm_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o slurm_helper.obj `if test -f 'batch-queue/slurm_helper.cpp'; then $(CYGPATH_W) 'batch-queue/slurm_helper.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/slurm_helper.cpp'; fi`

dmtcp_srun_helper.o: batch-queue/dmtcp_srun_helper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dmtcp_srun_helper.o -MD -MP -MF $(DEPDIR)/dmtcp_srun_helper.Tpo -c -o dmtcp_srun_helper.o `test -f 'batch-queue/dmtcp_srun_helper.cpp' || echo '$(srcdir)/'`batch-queue/dmtcp_srun_helper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dmtcp_srun_helper.Tpo $(DEPDIR)/dmtcp_srun_helper.Po
#	$(AM_V_CXX)source='batch-queue/dmtcp_srun_helper.cpp' object='dmtcp_srun_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dmtcp_srun_helper.o `test -f 'batch-queue/dmtcp_srun_helper.cpp' || echo '$(srcdir)/'`batch-queue/dmtcp_srun_helper.cpp

dmtcp_srun_helper.obj: batch-queue/dmtcp_srun_helper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dmtcp_srun_helper.obj -MD -MP -MF $(DEPDIR)/dmtcp_srun_helper.Tpo -c -o dmtcp_srun_helper.obj `if test -f 'batch-queue/dmtcp_srun_helper.cpp'; then $(CYGPATH_W) 'batch-queue/dmtcp_srun_helper.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/dmtcp_srun_helper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dmtcp_srun_helper.Tpo $(DEPDIR)/dmtcp_srun_helper.Po
#	$(AM_V_CXX)source='batch-queue/dmtcp_srun_helper.cpp' object='dmtcp_srun_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dmtcp_srun_helper.obj `if test -f 'batch-queue/dmtcp_srun_helper.cpp'; then $(CYGPATH_W) 'batch-queue/dmtcp_srun_helper.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/dmtcp_srun_helper.cpp'; fi`

rm_main.o: batch-queue/rm_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_main.o -MD -MP -MF $(DEPDIR)/rm_main.Tpo -c -o rm_main.o `test -f 'batch-queue/rm_main.cpp' || echo '$(srcdir)/'`batch-queue/rm_main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_main.Tpo $(DEPDIR)/rm_main.Po
#	$(AM_V_CXX)source='batch-queue/rm_main.cpp' object='rm_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_main.o `test -f 'batch-queue/rm_main.cpp' || echo '$(srcdir)/'`batch-queue/rm_main.cpp

rm_main.obj: batch-queue/rm_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_main.obj -MD -MP -MF $(DEPDIR)/rm_main.Tpo -c -o rm_main.obj `if test -f 'batch-queue/rm_main.cpp'; then $(CYGPATH_W) 'batch-queue/rm_main.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_main.Tpo $(DEPDIR)/rm_main.Po
#	$(AM_V_CXX)source='batch-queue/rm_main.cpp' object='rm_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_main.obj `if test -f 'batch-queue/rm_main.cpp'; then $(CYGPATH_W) 'batch-queue/rm_main.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_main.cpp'; fi`

rm_torque.o: batch-queue/rm_torque.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_torque.o -MD -MP -MF $(DEPDIR)/rm_torque.Tpo -c -o rm_torque.o `test -f 'batch-queue/rm_torque.cpp' || echo '$(srcdir)/'`batch-queue/rm_torque.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_torque.Tpo $(DEPDIR)/rm_torque.Po
#	$(AM_V_CXX)source='batch-queue/rm_torque.cpp' object='rm_torque.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_torque.o `test -f 'batch-queue/rm_torque.cpp' || echo '$(srcdir)/'`batch-queue/rm_torque.cpp

rm_torque.obj: batch-queue/rm_torque.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_torque.obj -MD -MP -MF $(DEPDIR)/rm_torque.Tpo -c -o rm_torque.obj `if test -f 'batch-queue/rm_torque.cpp'; then $(CYGPATH_W) 'batch-queue/rm_torque.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_torque.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_torque.Tpo $(DEPDIR)/rm_torque.Po
#	$(AM_V_CXX)source='batch-queue/rm_torque.cpp' object='rm_torque.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_torque.obj `if test -f 'batch-queue/rm_torque.cpp'; then $(CYGPATH_W) 'batch-queue/rm_torque.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_torque.cpp'; fi`

rm_slurm.o: batch-queue/rm_slurm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_slurm.o -MD -MP -MF $(DEPDIR)/rm_slurm.Tpo -c -o rm_slurm.o `test -f 'batch-queue/rm_slurm.cpp' || echo '$(srcdir)/'`batch-queue/rm_slurm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_slurm.Tpo $(DEPDIR)/rm_slurm.Po
#	$(AM_V_CXX)source='batch-queue/rm_slurm.cpp' object='rm_slurm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_slurm.o `test -f 'batch-queue/rm_slurm.cpp' || echo '$(srcdir)/'`batch-queue/rm_slurm.cpp

rm_slurm.obj: batch-queue/rm_slurm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_slurm.obj -MD -MP -MF $(DEPDIR)/rm_slurm.Tpo -c -o rm_slurm.obj `if test -f 'batch-queue/rm_slurm.cpp'; then $(CYGPATH_W) 'batch-queue/rm_slurm.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_slurm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_slurm.Tpo $(DEPDIR)/rm_slurm.Po
#	$(AM_V_CXX)source='batch-queue/rm_slurm.cpp' object='rm_slurm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_slurm.obj `if test -f 'batch-queue/rm_slurm.cpp'; then $(CYGPATH_W) 'batch-queue/rm_slurm.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_slurm.cpp'; fi`

rm_utils.o: batch-queue/rm_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_utils.o -MD -MP -MF $(DEPDIR)/rm_utils.Tpo -c -o rm_utils.o `test -f 'batch-queue/rm_utils.cpp' || echo '$(srcdir)/'`batch-queue/rm_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_utils.Tpo $(DEPDIR)/rm_utils.Po
#	$(AM_V_CXX)source='batch-queue/rm_utils.cpp' object='rm_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_utils.o `test -f 'batch-queue/rm_utils.cpp' || echo '$(srcdir)/'`batch-queue/rm_utils.cpp

rm_utils.obj: batch-queue/rm_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_utils.obj -MD -MP -MF $(DEPDIR)/rm_utils.Tpo -c -o rm_utils.obj `if test -f 'batch-queue/rm_utils.cpp'; then $(CYGPATH_W) 'batch-queue/rm_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_utils.Tpo $(DEPDIR)/rm_utils.Po
#	$(AM_V_CXX)source='batch-queue/rm_utils.cpp' object='rm_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_utils.obj `if test -f 'batch-queue/rm_utils.cpp'; then $(CYGPATH_W) 'batch-queue/rm_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_utils.cpp'; fi`

rm_pmi.o: batch-queue/rm_pmi.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_pmi.o -MD -MP -MF $(DEPDIR)/rm_pmi.Tpo -c -o rm_pmi.o `test -f 'batch-queue/rm_pmi.cpp' || echo '$(srcdir)/'`batch-queue/rm_pmi.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_pmi.Tpo $(DEPDIR)/rm_pmi.Po
#	$(AM_V_CXX)source='batch-queue/rm_pmi.cpp' object='rm_pmi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_pmi.o `test -f 'batch-queue/rm_pmi.cpp' || echo '$(srcdir)/'`batch-queue/rm_pmi.cpp

rm_pmi.obj: batch-queue/rm_pmi.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rm_pmi.obj -MD -MP -MF $(DEPDIR)/rm_pmi.Tpo -c -o rm_pmi.obj `if test -f 'batch-queue/rm_pmi.cpp'; then $(CYGPATH_W) 'batch-queue/rm_pmi.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_pmi.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rm_pmi.Tpo $(DEPDIR)/rm_pmi.Po
#	$(AM_V_CXX)source='batch-queue/rm_pmi.cpp' object='rm_pmi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rm_pmi.obj `if test -f 'batch-queue/rm_pmi.cpp'; then $(CYGPATH_W) 'batch-queue/rm_pmi.cpp'; else $(CYGPATH_W) '$(srcdir)/batch-queue/rm_pmi.cpp'; fi`

warning.o: modify-env/warning.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT warning.o -MD -MP -MF $(DEPDIR)/warning.Tpo -c -o warning.o `test -f 'modify-env/warning.cpp' || echo '$(srcdir)/'`modify-env/warning.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/warning.Tpo $(DEPDIR)/warning.Po
#	$(AM_V_CXX)source='modify-env/warning.cpp' object='warning.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o warning.o `test -f 'modify-env/warning.cpp' || echo '$(srcdir)/'`modify-env/warning.cpp

warning.obj: modify-env/warning.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT warning.obj -MD -MP -MF $(DEPDIR)/warning.Tpo -c -o warning.obj `if test -f 'modify-env/warning.cpp'; then $(CYGPATH_W) 'modify-env/warning.cpp'; else $(CYGPATH_W) '$(srcdir)/modify-env/warning.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/warning.Tpo $(DEPDIR)/warning.Po
#	$(AM_V_CXX)source='modify-env/warning.cpp' object='warning.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o warning.obj `if test -f 'modify-env/warning.cpp'; then $(CYGPATH_W) 'modify-env/warning.cpp'; else $(CYGPATH_W) '$(srcdir)/modify-env/warning.cpp'; fi`

pathvirt.o: pathvirt/pathvirt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pathvirt.o -MD -MP -MF $(DEPDIR)/pathvirt.Tpo -c -o pathvirt.o `test -f 'pathvirt/pathvirt.cpp' || echo '$(srcdir)/'`pathvirt/pathvirt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pathvirt.Tpo $(DEPDIR)/pathvirt.Po
#	$(AM_V_CXX)source='pathvirt/pathvirt.cpp' object='pathvirt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pathvirt.o `test -f 'pathvirt/pathvirt.cpp' || echo '$(srcdir)/'`pathvirt/pathvirt.cpp

pathvirt.obj: pathvirt/pathvirt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pathvirt.obj -MD -MP -MF $(DEPDIR)/pathvirt.Tpo -c -o pathvirt.obj `if test -f 'pathvirt/pathvirt.cpp'; then $(CYGPATH_W) 'pathvirt/pathvirt.cpp'; else $(CYGPATH_W) '$(srcdir)/pathvirt/pathvirt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pathvirt.Tpo $(DEPDIR)/pathvirt.Po
#	$(AM_V_CXX)source='pathvirt/pathvirt.cpp' object='pathvirt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pathvirt.obj `if test -f 'pathvirt/pathvirt.cpp'; then $(CYGPATH_W) 'pathvirt/pathvirt.cpp'; else $(CYGPATH_W) '$(srcdir)/pathvirt/pathvirt.cpp'; fi`

unique-ckpt.o: unique-ckpt/unique-ckpt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT unique-ckpt.o -MD -MP -MF $(DEPDIR)/unique-ckpt.Tpo -c -o unique-ckpt.o `test -f 'unique-ckpt/unique-ckpt.cpp' || echo '$(srcdir)/'`unique-ckpt/unique-ckpt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/unique-ckpt.Tpo $(DEPDIR)/unique-ckpt.Po
#	$(AM_V_CXX)source='unique-ckpt/unique-ckpt.cpp' object='unique-ckpt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o unique-ckpt.o `test -f 'unique-ckpt/unique-ckpt.cpp' || echo '$(srcdir)/'`unique-ckpt/unique-ckpt.cpp

unique-ckpt.obj: unique-ckpt/unique-ckpt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT unique-ckpt.obj -MD -MP -MF $(DEPDIR)/unique-ckpt.Tpo -c -o unique-ckpt.obj `if test -f 'unique-ckpt/unique-ckpt.cpp'; then $(CYGPATH_W) 'unique-ckpt/unique-ckpt.cpp'; else $(CYGPATH_W) '$(srcdir)/unique-ckpt/unique-ckpt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unique-ckpt.Tpo $(DEPDIR)/unique-ckpt.Po
#	$(AM_V_CXX)source='unique-ckpt/unique-ckpt.cpp' object='unique-ckpt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o unique-ckpt.obj `if test -f 'unique-ckpt/unique-ckpt.cpp'; then $(CYGPATH_W) 'unique-ckpt/unique-ckpt.cpp'; else $(CYGPATH_W) '$(srcdir)/unique-ckpt/unique-ckpt.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) all-local
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdmtcpdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(d_bindir)/$(am__dirstamp)" || rm -f $(d_bindir)/$(am__dirstamp)
	-test -z "$(d_libdir)/$(am__dirstamp)" || rm -f $(d_libdir)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libdmtcpPROGRAMS \
	clean-local mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/discover_dmtcpinput.Po
	-rm -f ./$(DEPDIR)/discover_resources.Po
	-rm -f ./$(DEPDIR)/discover_slurm.Po
	-rm -f ./$(DEPDIR)/discover_torque.Po
	-rm -f ./$(DEPDIR)/dmtcp_discover_rm.Po
	-rm -f ./$(DEPDIR)/dmtcp_srun_helper.Po
	-rm -f ./$(DEPDIR)/modify-env.Po
	-rm -f ./$(DEPDIR)/pathvirt.Po
	-rm -f ./$(DEPDIR)/rm_main.Po
	-rm -f ./$(DEPDIR)/rm_pmi.Po
	-rm -f ./$(DEPDIR)/rm_slurm.Po
	-rm -f ./$(DEPDIR)/rm_torque.Po
	-rm -f ./$(DEPDIR)/rm_utils.Po
	-rm -f ./$(DEPDIR)/slurm_helper.Po
	-rm -f ./$(DEPDIR)/unique-ckpt.Po
	-rm -f ./$(DEPDIR)/warning.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libdmtcpPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/discover_dmtcpinput.Po
	-rm -f ./$(DEPDIR)/discover_resources.Po
	-rm -f ./$(DEPDIR)/discover_slurm.Po
	-rm -f ./$(DEPDIR)/discover_torque.Po
	-rm -f ./$(DEPDIR)/dmtcp_discover_rm.Po
	-rm -f ./$(DEPDIR)/dmtcp_srun_helper.Po
	-rm -f ./$(DEPDIR)/modify-env.Po
	-rm -f ./$(DEPDIR)/pathvirt.Po
	-rm -f ./$(DEPDIR)/rm_main.Po
	-rm -f ./$(DEPDIR)/rm_pmi.Po
	-rm -f ./$(DEPDIR)/rm_slurm.Po
	-rm -f ./$(DEPDIR)/rm_torque.Po
	-rm -f ./$(DEPDIR)/rm_utils.Po
	-rm -f ./$(DEPDIR)/slurm_helper.Po
	-rm -f ./$(DEPDIR)/unique-ckpt.Po
	-rm -f ./$(DEPDIR)/warning.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_binSCRIPTS uninstall-libdmtcpPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local am--depfiles check \
	check-am clean clean-binPROGRAMS clean-generic \
	clean-libdmtcpPROGRAMS clean-local cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dist_binSCRIPTS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-libdmtcpPROGRAMS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_binSCRIPTS uninstall-libdmtcpPROGRAMS

.PRECIOUS: Makefile


build_rm_loclaunch:
	cp batch-queue/dmtcp_rm_loclaunch $(top_builddir)/bin/

clean_rm_loclaunch:
	rm $(top_builddir)/bin/dmtcp_rm_loclaunch

install-libs: install-libdmtcpPROGRAMS

uninstall-libs: uninstall-libdmtcpPROGRAMS

all-local: build_rm_loclaunch

clean-local: clean_rm_loclaunch

.PHONY: install-libs uninstall-libs

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
